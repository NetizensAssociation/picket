version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8-browsers

    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm install
      - run: git submodule init
      - run: git submodule update
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run build
      - run: ./node_modules/.bin/web-ext lint --source-dir dist

  test:
    docker:
      - image: circleci/node:8-browsers

    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm install
      - run: git submodule init
      - run: git submodule update
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: npm run integration-test

  upload:
    docker:
      - image: circleci/node:8-browsers

    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm install
      - run: git submodule init
      - run: git submodule update
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run webstore-upload

  publish:
    docker:
      - image: circleci/node:8-browsers

    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm install
      - run: git submodule init
      - run: git submodule update
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run webstore-publish
      - run: npm run firefox-sign -- --api-key $WEB_EXT_API_KEY --api-secret $WEB_EXT_API_SECRET 


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test
      - upload:
          requires:
            - test
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - upload
          filters:
            branches:
              only: master
      - publish:
          requires:
            - hold
          filters:
            branches:
              only: master

